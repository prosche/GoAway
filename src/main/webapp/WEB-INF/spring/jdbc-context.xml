<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Hibernate4 -->
	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<!-- <context:property-placeholder location="classpath*:config/spring/jdbc.properties" 
		/> -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/GoAway</value>
		</property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<!-- 自动扫描指定位置下的实体文件进行映射 -->
		<property name="packagesToScan">
			<list>
				<value>org.java.com.model</value><!-- 扫描实体类 -->
			</list>
		</property>
	</bean>

	<!-- 配置Hibernate事务管理器 -->
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置事务异常封装 -->
<!--    <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

	<!-- 配置事务管理器，使用拦截器声明式事务 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<!-- PROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，则新建一个事务 -->
				<prop key=" save* "> PROPAGATION_REQUIRED </prop>
				<prop key=" update* "> PROPAGATION_REQUIRED </prop>
				<prop key=" delete* "> PROPAGATION_REQUIRED </prop>
				<prop key=" find* "> PROPAGATION_REQUIRED </prop>
				<prop key=" get* "> PROPAGATION_REQUIRED </prop>
				<prop key=" execute* "> PROPAGATION_REQUIRED </prop>
				<prop key=" load* "> PROPAGATION_REQUIRED </prop>
				<prop key=" merge* "> PROPAGATION_REQUIRED </prop>
				<prop key=" add* "> PROPAGATION_REQUIRED </prop>
			</props>
		</property>
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*ServiceImpl</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
</beans>
